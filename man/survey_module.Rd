% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survey_module.R
\name{survey_module}
\alias{survey_module}
\title{Create R6-based Shiny modules for the app}
\description{
Create R6-based Shiny modules for the app

Create R6-based Shiny modules for the app
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{source_list}}{List containing the data for all the inputs}

\item{\code{div_id}}{ID of the div containing the survey UI}

\item{\code{module_id}}{ID of the shiny module}

\item{\code{button_labels}}{character vector of length two with labels for submit
button in active and disabled state}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{survey_module$new()}}
\item \href{#method-ui}{\code{survey_module$ui()}}
\item \href{#method-server}{\code{survey_module$server()}}
\item \href{#method-clone}{\code{survey_module$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializing the shiny.survey_module object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{survey_module$new(
  source_method,
  source_object = NULL,
  source_yaml = NULL,
  source_gsheet_id = NULL,
  source_gsheet_sheetname = NULL,
  output_gsheet = FALSE,
  output_gsheet_id = NULL,
  output_gsheet_sheetname = NULL,
  module_id = NULL,
  div_id = "form",
  custom_css = NULL,
  button_labels = c("Submit", "Cannot submit")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source_method}}{character string specifying in what form the source
config file will be provided. Can be either 'gsheet', 'yaml' or 'raw'.
Necessity of other arguments is dependent on this choice. For more info
see 'details'}

\item{\code{source_object}}{object of class \code{list} (similiar in structure to
'yaml' source) or \code{data.frame} (similiar in structure to 'googlesheet'
source) to be the source of questions. You can create a sample data.frame
with \code{create_survey_source()}. Needed when \code{source_method == 'raw'}}

\item{\code{source_yaml}}{path to the source yaml file}

\item{\code{source_gsheet_id}}{id of the source googlesheet file}

\item{\code{source_gsheet_sheetname}}{name of the source spreadsheet}

\item{\code{output_gsheet}}{logical: do you wish to save the answers automatically
to the googlesheet. If TRUE, the 'output_gsheet_id' and 'output_gsheet_sheetname'
arguments need to be specified. Defaults to FALSE}

\item{\code{output_gsheet_id}}{id of the output googlesheet file. If not specified,
the same googlesheet as for 'source' will be used}

\item{\code{output_gsheet_sheetname}}{name of the output spreadsheet}

\item{\code{module_id}}{character string with unique id for the module. If not
specified, it will be automatically generated}

\item{\code{div_id}}{character string with unique id for the created div. If not
specified, it will be set to 'form'}

\item{\code{custom_css}}{custom css for classes 'mandatory star' and 'invalid_input'.
If not specified, default look will be used}

\item{\code{button_labels}}{character vector of length two with labels for submit
button in active and disabled state}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Currently, there are multiple methods both for source, which will generate
the inputs, and for output. Mandatory arguments change depending of your
choices:
\itemize{
\item for source:
\itemize{
\item \code{source_method == 'yaml'}: 'source_yaml'
\item \code{source_method == 'gsheet'}: 'source_gsheet_id,' 'source_gsheet_sheetname'
\item \code{source_method == 'raw'}: 'source_object'
}
\item for output:
\itemize{
\item \code{output_gsheet == TRUE}: 'output_gsheet_id' (if other than 'source_gsheet_id')
and 'output_gsheet_sheetname'
}
}
}

\subsection{Returns}{
the 'shiny.survey_module' object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ui"></a>}}
\if{latex}{\out{\hypertarget{method-ui}{}}}
\subsection{Method \code{ui()}}{
Method to input the UI of your survey into the shinyApp UI
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{survey_module$ui()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The whole UI of your survey
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-server"></a>}}
\if{latex}{\out{\hypertarget{method-server}{}}}
\subsection{Method \code{server()}}{
Method to input the UI of your survey into the shinyApp UI
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{survey_module$server()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The reactiveValues holding
/itemize{
/item{is_done logical vector indicating if the survey has been sent. NA indicates error}
/item{message if catches error during survey sending, character string with error message. Otherwise NULL }
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{survey_module$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
